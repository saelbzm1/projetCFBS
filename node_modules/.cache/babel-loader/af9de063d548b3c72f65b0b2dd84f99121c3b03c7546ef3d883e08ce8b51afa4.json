{"ast":null,"code":"/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nconst defaults = require('./defaults');\nfunction createReferenceRegex() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const options = Object.assign({}, defaults, opts);\n  return new RegExp('\\\\' + options.opening_character + '([^' + options.closing_character + ']+)' + '\\\\' + options.closing_character, 'g');\n}\nmodule.exports = createReferenceRegex;","map":{"version":3,"names":["defaults","require","createReferenceRegex","opts","arguments","length","undefined","options","Object","assign","RegExp","opening_character","closing_character","module","exports"],"sources":["C:/Users/sael.bouzemarene/cfbsprojet/node_modules/style-dictionary/lib/utils/references/createReferenceRegex.js"],"sourcesContent":["/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nconst defaults = require('./defaults');\n\nfunction createReferenceRegex(opts = {}) {\n  const options = Object.assign({}, defaults, opts);\n\n  return new RegExp(\n    '\\\\' +\n    options.opening_character +\n    '([^' +\n    options.closing_character +\n    ']+)' +\n    '\\\\' +\n    options.closing_character, 'g'\n  );\n}\n\nmodule.exports = createReferenceRegex;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAY,CAAC;AAEtC,SAASC,oBAAoBA,CAAA,EAAY;EAAA,IAAXC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACrC,MAAMG,OAAO,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAET,QAAQ,EAAEG,IAAI,CAAC;EAEjD,OAAO,IAAIO,MAAM,CACf,IAAI,GACJH,OAAO,CAACI,iBAAiB,GACzB,KAAK,GACLJ,OAAO,CAACK,iBAAiB,GACzB,KAAK,GACL,IAAI,GACJL,OAAO,CAACK,iBAAiB,EAAE,GAC7B,CAAC;AACH;AAEAC,MAAM,CAACC,OAAO,GAAGZ,oBAAoB"},"metadata":{},"sourceType":"script","externalDependencies":[]}